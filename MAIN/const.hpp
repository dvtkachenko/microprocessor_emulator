// CONST.hpp  -  Объявление глобальных констант

# ifndef __CONSTANTS_HPP
# define __CONSTANTS_HPP 1

// // // // // // // // // // // // // // // // // // // // // // // //
//  Описание новых типов
// // // // // // // // // // // // // // // // // // // // // // // //
  typedef unsigned long dword;  // беззнаковое целое 4 байта
  typedef unsigned int  word ;  // беззнаковое целое 2 байта
  typedef unsigned char byte ;  // беззнаковое целое 1 байт
  typedef char string80[80]  ;  // строка из 80 символов

  // параметры элемента, присоединенного к шине
  typedef struct 
    {
      int  ModelItemNumber;    // номер элемента
      byte *Parameters;        // указатель на массив параметров элемента
    } ModelItemParameters;

  // параметры связи(одной) элемента с шиной
  typedef struct
    {
      int  ModelItemNumber;  // номер элемента
      int  PinNumber;        // номер ножки элемента
      int  BusLineNumber;    // номер линии шины
    } ModelLinkParameters;

// // // // // // // // // // // // // // // // // // // // // // // //
//  Описание констант, кодирующих состояния физических сигналов
// // // // // // // // // // // // // // // // // // // // // // // //

// DON'T  CHANGE  THIS VALUE  !!!!!!!!

# define  LOW_LEVEL          0x00  //  нижний уровень (НУ)         :00000
# define  HI_LEVEL           0x01  //  верхний уровень (ВУ)        :00001
# define  HZ                 0x05  //  высокоимпедансное состояние :00101
# define  UNDEF_LEVEL        0x08  //  неопределенный уровень      :01000

# define  RECEIVE            0x10  //  кодировка состояния "Прием" :10000
                                   //  применяется для двунаправленных
                                   //  линий

# define  CONNECT            0x20  //  кодировка состояния "Наличие соединения
                                   //  с шиной" :100000 . Устанавливается если                                    //  применяется для двунаправленных
                                   //  вывод нах-ся не в подвешенном состоянии

// // // // // // // // // // // // // // // // // // // // // // // //
//  Описание сервисных констант
// // // // // // // // // // // // // // // // // // // // // // // //

# define  MY_ERROR     -1     //  ошибка
# define  MY_NO_ERROR   0     //  нет ошибки

# define  TRUE       1     //  1
# define  FALSE      0     //  0

// // // // // // // // // // // // // // // // // // // // // // // //
//  Описание констант определяющих уровни моделирования
// // // // // // // // // // // // // // // // // // // // // // // //

# define  KVANT_LEVEL        0    //  уровень кванта времени
# define  MIKROTAKT_LEVEL    1    //  уровень микротакта генератора
# define  TAKT_LEVEL         2    //  уровень такта генератора
# define  RUN_LEVEL          3    //  уровень тактов генератора

// // // // // // // // // // // // // // // // // // // // // // // //

# endif  // __CONSTANTS_HPP
